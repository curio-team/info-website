(()=>{function t(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,n){if(!t)return;if("string"==typeof t)return r(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);"Object"===e&&t.constructor&&(e=t.constructor.name);if("Map"===e||"Set"===e)return Array.from(t);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return r(t,n)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,r){(null==r||r>t.length)&&(r=t.length);for(var n=0,e=new Array(r);n<r;n++)e[n]=t[n];return e}document.addEventListener("DOMContentLoaded",(function(){var r=document.getElementById("animatedEl"),n=document.querySelectorAll("[data-add-class-after-intro]");n.forEach((function(r){var n;void 0!==r.dataset.noIntro&&(n=r.classList).add.apply(n,t(r.dataset.addClassAfterIntro.split(" ")))})),r.addEventListener("animationend",(function(){n.forEach((function(r){var n;(n=r.classList).add.apply(n,t(r.dataset.addClassAfterIntro.split(" ")))}))}))}))})();
//# sourceMappingURL=app-viewer.js.map